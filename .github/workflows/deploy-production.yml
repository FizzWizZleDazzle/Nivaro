name: Deploy to Production

on:
  push:
    tags:
      - 'v*.*.*'

env:
  NODE_VERSION: '20'
  
jobs:
  deploy-frontend-production:
    name: Deploy Frontend to Production
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: app/package-lock.json
        
    - name: Install dependencies
      run: |
        cd app
        npm install --legacy-peer-deps
        
    - name: Build frontend
      run: |
        cd app
        npm run build
        
    - name: Prepare static files
      run: |
        cd app
        mkdir -p deploy
        cp -r .next/static deploy/
        cp -r public/* deploy/ 2>/dev/null || true
        
    - name: Deploy to GitHub Pages (Production)
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./app/deploy
        destination_dir: production
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        release_name: Release ${{ steps.version.outputs.VERSION }}
        body: |
          ## Changes in this Release
          
          ### Frontend
          - Deployed to Cloudflare Pages
          
          ### Backend  
          - Deployed to Cloudflare Workers
          
          ### Deployment Information
          - Version: ${{ steps.version.outputs.VERSION }}
          - Build Date: ${{ github.event.head_commit.timestamp }}
          - Commit: ${{ github.sha }}
        draft: false
        prerelease: false

  deploy-backend-production:
    name: Deploy Backend to Production
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown
        
    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          backend/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('backend/Cargo.lock') }}
        
    - name: Install worker-build
      run: cargo install worker-build --locked --force
      
    - name: Build backend
      run: |
        cd backend
        worker-build --release
        
    - name: Deploy to Cloudflare Workers (Production)
      uses: cloudflare/wrangler-action@v3
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        workingDirectory: backend
        command: deploy --env production